#!/usr/bin/python
# -*- coding: utf-8 -*-
# Copyright 2021 Red Hat
# GNU General Public License v3.0+
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

#############################################
#                WARNING                    #
#############################################
#
# This file is auto generated by the resource
#   module builder playbook.
#
# Do not edit this file manually.
#
# Changes to this file will be over written
#   by the resource module builder.
#
# Changes should be made in the model used to
#   generate this file or in the resource module
#   builder template.
#
#############################################

from __future__ import absolute_import, division, print_function
__metaclass__ = type

ANSIBLE_METADATA = {
    'metadata_version': '1.0',
    'status': ['preview'],
    'supported_by': 'opengear'
}

DOCUMENTATION = """
---
module: om_auth
version_added: 1.0.0
short_description: Manages auth attributes of om auth
description:
  - Manages auth attributes of om auth.
author:
  - "Adrian Van Katwyk (@avankatwyk)"
  - "Matt Witmer (@mattwit)"
options:
  config:
    description: auth configuration
    type: dict
    suboptions:
      mode:
        type: str
        description: auth mode
      policy:
        description: Checks auth
        type: str
      tacacsMethod:
        type: str
        description: tacacs method
      tacacsService:
        type: str
        description: tacacs service
      ldapBaseDN:
        type: str
        description: ldap base dn
      ldapBindDN:
        type: str
        description: ldap bind dn
      ldapIgnoreReferals:
        type: bool
        description: ldap ignore referrals
      ldapUsernameAttribute:
        type: str
        description: ldap username
      ldapGroupMembershipAttribute:
        type: str
        description: ldap group member
      radiusAuthenticationServers:
        type: list
        description: radius auth servers
        elements: dict
        suboptions:
          id:
            type: str
            description: id
          hostname:
            type: str
            description: hostname or address
          port:
            type: int
            description: radius port
      radiusAccountingServers:
        type: list
        description: radius accounting server
        elements: dict
        suboptions:
          id:
            type: str
            description: id
          hostname:
            type: str
            description: hostname or address
          port:
            type: int
            description: port
      tacacsAuthenticationServers:
        type: list
        description: tacacs auth server
        elements: dict
        suboptions:
          id:
            type: str
            description: id
          hostname:
            type: str
            description: hostname or address
          port:
            type: int
            description: port
      ldapAuthenticationServers:
        type: list
        description: ldap auth server
        elements: dict
        suboptions:
          id:
            type: str
            description: id
          hostname:
            type: str
            description: hostname or address
          port:
            type: int
            description: port
      radiusPassword:
        type: str
        description: radius password
      tacacsPassword:
        type: str
        description: tacacs password
      ldapBindPassword:
        type: str
        description: ldap bind password
  state:
    description:
    - The state of the configuration after module completion.
    type: str
    choices:
    - merged
    - replaced
    - overridden
    - gathered
    - rendered
    default: merged
"""


from ansible.module_utils.basic import AnsibleModule
from ansible_collections.opengear.om.plugins.module_utils.network.om.argspec.auth.auth import AuthArgs
from ansible_collections.opengear.om.plugins.module_utils.network.om.config.auth.auth import Auth


def main():
    """
    Main entry point for module execution

    :returns: the result form module invocation
    """
    module = AnsibleModule(argument_spec=AuthArgs.argument_spec,
                           supports_check_mode=True)

    result = Auth(module).execute_module()
    module.exit_json(**result)


if __name__ == '__main__':
    main()
